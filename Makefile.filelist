BIN := compiler/${COMPILER} compiler/${MINIFIER}

ifeq "${WITH_TOPLEVEL}" "YES"
BIN += jsoo_tools/${MKTOP} jsoo_tools/${MKCMIS}
endif

INTF := lib/*.cmi

IMPL := lib/$(LIBNAME).cma   \
        lib/syntax/pa_js.cmo \
        lib/dll$(LIBNAME)$(DLLEXT) \
        lib/lib$(LIBNAME)$(LIBEXT)

INTF += lib/log/*.cmi
IMPL += lib/log/logger.cma

ifeq "${BEST}" "opt"
ifeq "${NATDYNLINK}" "YES"
IMPL += lib/syntax/pa_js.cmx lib/syntax/pa_js.cmxs
endif
endif

ifeq "${WITH_GRAPHICS}" "YES"
IMPL += lib/graphics/graphics.cma
INTF += lib/graphics/*.cmi
endif

ifeq "${WITH_TYXML}${WITH_REACT}" "YESYES"
IMPL += lib/tyxml/tyxml.cma
INTF += lib/tyxml/*.cmi
endif

ifeq "${WITH_TOPLEVEL}" "YES"
IMPL += lib/toplevel/jsooTop.cmo
INTF += lib/toplevel/jsooTop.cmi
endif


OTHERS := runtime/runtime.js runtime/weak.js \
          runtime/polyfill/classlist.js \
          runtime/polyfill/array.js \
          runtime/toplevel.js \
          runtime/graphics.js \
          runtime/nat.js \

COMP_INTF := compiler/compiler.cmi
COMP_IMPL := compiler/compiler.cma
COMP_NAT_IMPL := compiler/compiler.cmxa compiler/compiler.a compiler/compiler.cmx
COMP_NATDYN_IMPL := compiler/compiler.cmxs

OCAMLBUILD_IMPL := ocamlbuild_js_of_ocaml.cma

INTF += ocamlbuild/_build/ocamlbuild_js_of_ocaml.cmi

ifeq "${BEST}" "opt"
OCAMLBUILD_IMPL += ocamlbuild_js_of_ocaml.cmxa ocamlbuild_js_of_ocaml.a
ifeq "${NATDYNLINK}" "YES"
OCAMLBUILD_IMPL += ocamlbuild_js_of_ocaml.cmxs
endif
endif

IMPL += $(addprefix ocamlbuild/_build/,$(OCAMLBUILD_IMPL))

ifeq "${WITH_DERIVING}" "YES"

JSON := lib/deriving_json/deriving_Json.cmi       \
        lib/deriving_json/deriving_Json_lexer.cmi

INTF += $(JSON)
INTF += lib/syntax/pa_deriving_Json.cmi

IMPL += lib/syntax/pa_deriving_Json.cmo \
        lib/syntax/pa_deriving_Json.cmi \
        lib/deriving_json.cma

NATIMPL := lib/deriving_json.cmxa     \
	   lib/deriving_json.cmxs     \
	   lib/deriving_json$(LIBEXT) \

NATIMPL += $(JSON:.cmi=.cmx)

ifeq "${NATDYNLINK}" "YES"
NATIMPL += lib/syntax/pa_deriving_Json.cmx \
           lib/syntax/pa_deriving_Json.cmxs
COMP_IMPL += $(COMP_NATDYN_IMPL)
endif

ifeq "$(BEST)" "opt"
IMPL += $(NATIMPL)
COMP_IMPL += $(COMP_NAT_IMPL)
endif

endif

DOC := ${INTF:.cmi=.mli}

ifeq "${WITH_PPX}" "YES"
OCAMLFIND_BIN += lib/ppx/${PPX}
endif